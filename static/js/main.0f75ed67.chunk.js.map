{"version":3,"sources":["logo.svg","Listitem.js","App.js","reportWebVitals.js","index.js"],"names":["Listitem","props","listItems","items","map","item","className","type","value","text","id","key","onChange","e","editItem","target","icon","onClick","deleteItem","enterAnimation","from","transform","to","library","add","faTrash","App","i","restOfItems","state","filter","setState","handleInput","currentItem","Date","now","addItem","preventDefault","newItem","placeholder","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAAe,I,0BC0CAA,EArCE,SAACC,GAChB,IAEMC,EAFQD,EAAME,MAEIC,KAAI,SAACC,GAAD,OAC1B,qBAAKC,UAAU,OAAf,SACE,8BACE,uBACEC,KAAK,OACLC,MAAOH,EAAKI,KACZC,GAAIL,EAAKM,IACTC,SAAU,SAACC,GACTZ,EAAMa,SAASD,EAAEE,OAAOP,MAAOH,EAAKM,QAIxC,+BACE,cAAC,IAAD,CACEL,UAAU,UACVU,KAAK,QACLC,QAAS,kBAAMhB,EAAMiB,WAAWb,EAAKM,cAflBN,EAAKM,QA0BlC,OACE,8BACE,cAAC,IAAD,CAAUQ,eAPe,CAC3BC,KAAM,CAAEC,UAAW,iBACnBC,GAAI,CAAED,UAAW,gBAKf,SAAiDnB,O,eC9BvDqB,IAAQC,IAAIC,K,IAqFGC,E,kDAlFb,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IAURiB,WAAa,SAACS,GACZ,IAAMC,EAAc,EAAKC,MAAM1B,MAAM2B,QAAO,SAACzB,GAAD,OAAUA,EAAKM,MAAQgB,KAEnE,EAAKI,SAAS,CACZ5B,MAAOyB,KAfQ,EAkBnBI,YAAc,SAACnB,GACb,EAAKkB,SAAS,CACZE,YAAa,CACXxB,KAAMI,EAAEE,OAAOP,MACfG,IAAKuB,KAAKC,UAtBG,EA2BnBC,QAAU,SAACvB,GACTA,EAAEwB,iBACF,IAAMC,EAAU,EAAKT,MAAMI,YAEvBK,EAAQ7B,MACV,EAAKsB,SAAS,CACZ5B,MAAM,GAAD,mBAAM,EAAK0B,MAAM1B,OAAjB,CAAwBmC,IAC7BL,YAAa,CACXxB,KAAM,GACNE,IAAK,OApCM,EA0CnBG,SAAW,SAACL,EAAME,GAChB,IAAIR,EAAQ,EAAK0B,MAAM1B,MACvBA,EAAMC,KAAI,SAACC,GACLA,EAAKM,KAAOA,IACdN,EAAKI,KAAOA,MAGhB,EAAKsB,SAAS,CACZ5B,MAAOA,KAhDT,EAAK0B,MAAQ,CACX1B,MAAO,GACP8B,YAAa,CACXxB,KAAM,GACNE,IAAK,KANQ,E,qDAuDjB,OACE,qBAAKL,UAAU,MAAf,SACE,mCACE,6CAEA,uBAAMI,GAAG,aAAT,UACE,uBACEH,KAAK,OACLgC,YAAY,cACZ/B,MAAOgC,KAAKX,MAAMI,YAAYxB,KAC9BG,SAAU4B,KAAKR,cAEjB,wBAAQf,QAASuB,KAAKJ,QAAS7B,KAAK,SAApC,oBAKF,cAAC,EAAD,CACEJ,MAAOqC,KAAKX,MAAM1B,MAClBe,WAAYsB,KAAKtB,WACjBJ,SAAU0B,KAAK1B,oB,GA5ET2B,IAAMC,WCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0f75ed67.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport \"./Listitem.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport FlipMove from \"react-flip-move\";\r\n\r\nconst Listitem = (props) => {\r\n  const items = props.items;\r\n\r\n  const listItems = items.map((item) => (\r\n    <div className=\"list\" key={item.key}>\r\n      <p>\r\n        <input\r\n          type=\"text\"\r\n          value={item.text}\r\n          id={item.key}\r\n          onChange={(e) => {\r\n            props.editItem(e.target.value, item.key);\r\n          }}\r\n        />\r\n\r\n        <span>\r\n          <FontAwesomeIcon\r\n            className=\"faicons\"\r\n            icon=\"trash\"\r\n            onClick={() => props.deleteItem(item.key)}\r\n          />\r\n        </span>\r\n      </p>\r\n    </div>\r\n  ));\r\n  const customEnterAnimation = {\r\n    from: { transform: \"scale(0.5, 1)\" },\r\n    to: { transform: \"scale(1, 1)\" },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FlipMove enterAnimation={customEnterAnimation}>{listItems}</FlipMove>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Listitem;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport Listitem from \"./Listitem\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faTrash);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      currentItem: {\n        text: \"\",\n        key: \"\",\n      },\n    };\n  }\n\n  deleteItem = (i) => {\n    const restOfItems = this.state.items.filter((item) => item.key !== i);\n\n    this.setState({\n      items: restOfItems,\n    });\n  };\n  handleInput = (e) => {\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now(),\n      },\n    });\n  };\n\n  addItem = (e) => {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n\n    if (newItem.text) {\n      this.setState({\n        items: [...this.state.items, newItem],\n        currentItem: {\n          text: \"\",\n          key: \"\",\n        },\n      });\n    }\n  };\n\n  editItem = (text, key) => {\n    let items = this.state.items;\n    items.map((item) => {\n      if (item.key == key) {\n        item.text = text;\n      }\n    });\n    this.setState({\n      items: items,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h2> To Do List</h2>\n\n          <form id=\"to-do-form\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter Task \"\n              value={this.state.currentItem.text}\n              onChange={this.handleInput}\n            />\n            <button onClick={this.addItem} type=\"submit\">\n              Add\n            </button>\n          </form>\n\n          <Listitem\n            items={this.state.items}\n            deleteItem={this.deleteItem}\n            editItem={this.editItem}\n          />\n        </header>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}